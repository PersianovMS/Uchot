//Процедуры модуля менеджера распознавашек

#Область ПРОГРАММНЫЙ_ИНТЕРФЕЙС
	
//Распознаёт статью и коркошелёк в одной строке данных
// Параметры:
//  ДанныеСтроки  - Коллекция - Коллекции с ключами Время, Старт, Комментарий, Кошелёк, КорКошелёк, Статья. Любой ключ может отсутствовать или быть пустым.
//	ВыборкаРаспознаваний - ВыборкаИзРезультатаЗапроса/Массив структур - аналог справочника распознаваний. При Неопределено автоопределится. В цикле рекомендуется передать переменную (Возможно Неопределено, но в переменной).
//  Кошелёк  - Кошелёк ссылка - Кошелёк шапки. Используется, если нет кошнлька строки.
//  СтатьяУмолчание  - СтатьяДДС ссылка - Статья для присваивания в нераспознанных данных. По умолчанию Неопределено - подставляется пустое значение
//  КошелёкУмолчание  - Кошелёк ссылка - Кошелёк для присваивания в нераспознанных данных. По умолчанию Неопределено - подставляется пустое значение
//  Перезаписать  - Булево - Перезаписать данные, если они уже заполнены. Пол умолчанию Ложь.
Процедура РаспознатьВСтроке(
		ДанныеСтроки,
		ВыборкаРаспознаваний = Неопределено,
		Кошелёк = Неопределено,
		СтатьяУмолчание = Неопределено,
		КошелёкУмолчание = Неопределено,
		Перезаписать = Ложь) Экспорт
	ТекДанные = Новый Структура("ЭтоСтарт,Кошелёк,Время,Старт,Комментарий,Статья,Сумма,КорКошелёк", Ложь, Кошелёк);
	ЗаполнитьЗначенияСвойств(ТекДанные, ДанныеСтроки);
	Если ЗначениеЗаполнено(ТекДанные.Старт) Тогда
		ТекДанные.Вставить("ЭтоСтарт", Истина);
		ТекДанные.Вставить("Время", ТекДанные.Старт);
	КонецЕсли;
	#Область РАСПОЗНАВАНИЕ
		#Если ТонкийКлиент Тогда
			Если ВыборкаРаспознаваний = Неопределено Тогда
				ВыборкаРаспознаваний = ВОЛНА_ОбщегоНазначенияВС.ВыполнитьКод("Справочники.Распознавания.ВсеРаспознавания(Истина)",,, Истина);
			КонецЕсли;
			Для Каждого ВыборкаРаспознавашек Из ВыборкаРаспознаваний Цикл
				Если РаспознатьДанные(ТекДанные, ВыборкаРаспознавашек, Перезаписать) Тогда
					Прервать;
				КонецЕсли
			КонецЦикла;
		#Иначе
			Если ВыборкаРаспознаваний = Неопределено Тогда
				ВыборкаРаспознаваний = Справочники.Распознавания.ВсеРаспознавания();
			КонецЕсли;
			ВыборкаРаспознавашек = ВыборкаРаспознаваний;
			ВыборкаРаспознавашек.Сбросить();
			Пока ВыборкаРаспознавашек.Следующий() Цикл
				Если РаспознатьДанные(ТекДанные, ВыборкаРаспознавашек) Тогда
					Прервать;
				КонецЕсли
			КонецЦикла;
		#КонецЕсли
	#КонецОбласти
	Если НЕ ЗначениеЗаполнено(ТекДанные.Статья) И ЗначениеЗаполнено(СтатьяУмолчание) Тогда
		ТекДанные.Вставить("Статья", СтатьяУмолчание);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ТекДанные.КорКошелёк) И ЗначениеЗаполнено(КошелёкУмолчание) Тогда
		ТекДанные.Вставить("КорКошелёк", КошелёкУмолчание);
	КонецЕсли;
	Если ТекДанные.ЭтоСтарт Тогда
		ТекДанные.Вставить("Старт", ТекДанные.Время);
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ДанныеСтроки, ТекДанные);
КонецПроцедуры

// Распознаёт статью и кошелёк в массиве данных
// Параметры:
//  мДанные  - Массив - Коллекции с ключами Время, Старт, Комментарий, Кошелёк, КорКошелёк, Статья. Любой ключ может отсутствовать или быть пустым.
//	ВыборкаРаспознаваний - ВыборкаИзРезультатаЗапроса - аналог справочника распознаваний. Если не передано - автоопределится.
//  Кошелёк  - Кошелёк ссылка - Кошелёк шапки. Используется, если нет кошнлька строки.
//  СтатьяУмолчание  - СтатьяДДС ссылка - Статья для присваивания в нераспознанных данных. По умолчанию Неопределено - подставляется пустое значение
//  КошелёкУмолчание  - Кошелёк ссылка - Кошелёк для присваивания в нераспознанных данных. По умолчанию Неопределено - подставляется пустое значение
Процедура РаспознатьМассив(мДанные, ВыборкаРаспознаваний = Неопределено, Кошелёк = Неопределено, СтатьяУмолчание = Неопределено, КошелёкУмолчание = Неопределено) Экспорт
	Для каждого ЭлементДанных Из мДанные Цикл
		РаспознатьВСтроке(ЭлементДанных, ВыборкаРаспознаваний, Кошелёк, СтатьяУмолчание, КошелёкУмолчание);
	КонецЦикла;
КонецПроцедуры // РаспознатьМассив

#КонецОбласти

#Область СЛУЖЕБНЫЕ

//Распознаёт статью и коркошелёк
// Параметры:
//	ТекДанные - структура - Ключи ЭтоСтарт,Кошелёк,Время,Старт,Комментарий,Статья,Сумма,КорКошелёк
//	ВыборкаРаспознавашек - ВыборкаИзРезультатаЗапроса/Структура - аналог справочника распознаваний
//  Перезаписать  - Булево - Перезаписать данные, если они уже заполнены. Пол умолчанию Ложь.
// Возвращаемое значение:
//	Булево - Правило применено. Дальнейшее распознавание прекращается.
Функция РаспознатьДанные(ТекДанные, ВыборкаРаспознавашек, Перезаписать = Ложь)
	Результат = Ложь;
	РасчётПараметров = Ложь;
	ЕстьУсловие = ЗначениеЗаполнено(ВыборкаРаспознавашек.УсловиеПрименения);
	ЕстьПравило = ЗначениеЗаполнено(ВыборкаРаспознавашек.ПравилоРаспознавания);
	Если ЕстьУсловие Тогда
		РасчётПараметров = Истина;
	Иначе
		Результат = СтрНайти(ВРег(ТекДанные.Комментарий), ВРег(ВыборкаРаспознавашек.Наименование)) > 0
				И (ТекДанные.Кошелёк = ВыборкаРаспознавашек.Кошелёк ИЛИ НЕ ЗначениеЗаполнено(ВыборкаРаспознавашек.Кошелёк) ИЛИ ТекДанные.ЭтоСтарт);
		РасчётПараметров = Результат И ЕстьПравило;
	КонецЕсли;
	Если РасчётПараметров Тогда
		#Если ТонкийКлиент Тогда
			ПараметрыПрименения = ВыборкаРаспознавашек.Параметры;
		#Иначе
			ПараметрыПрименения = Новый Структура;
			ПодстрокаВыборки = ВыборкаРаспознавашек.Параметры.Выбрать();
			Пока ПодстрокаВыборки.Следующий() Цикл
				Если ПараметрыПрименения.Свойство(ПодстрокаВыборки.ИмяПараметра) Тогда
					ТекМассив = ВОЛНА_ОбщегоНазначения_КлиентСервер.ПреобразоватьВМассив(ПараметрыПрименения[ПодстрокаВыборки.ИмяПараметра]);
					ТекМассив.Добавить(ПодстрокаВыборки.ЗначениеПараметра);
					ПараметрыПрименения.Вставить(ПодстрокаВыборки.ИмяПараметра, ТекМассив);
				Иначе
					ПараметрыПрименения.Вставить(ПодстрокаВыборки.ИмяПараметра,ПодстрокаВыборки.ЗначениеПараметра);
				КонецЕсли;
			КонецЦикла;
		#КонецЕсли
		ПараметрыПрименения.Вставить("Приёмник", ТекДанные);
		ПараметрыПрименения.Вставить("Распознавание", ВыборкаРаспознавашек);
	КонецЕсли;
	Если ?(ЕстьУсловие,
			ВОЛНА_ОбщегоНазначения_КлиентСервер.ВыполнитьКод(ВыборкаРаспознавашек.УсловиеПрименения, ПараметрыПрименения, Ложь),
			Результат) Тогда
		Результат = Истина;
		КомментарийНеЗаполнен = Перезаписать ИЛИ НЕ ЗначениеЗаполнено(ТекДанные.Комментарий);
		КорКошелёкНеЗаполнен = Перезаписать ИЛИ НЕ ЗначениеЗаполнено(ТекДанные.КорКошелёк);
		СтатьяНеЗаполнена = Перезаписать ИЛИ НЕ ЗначениеЗаполнено(ТекДанные.Статья);
		Если КомментарийНеЗаполнен Тогда
			ТекДанные.Комментарий = ВыборкаРаспознавашек.Комментарий;
		КонецЕсли;
		Если КорКошелёкНеЗаполнен Тогда
			ТекДанные.КорКошелёк = ВыборкаРаспознавашек.КорКошелёк;
		КонецЕсли;
		Если СтатьяНеЗаполнена Тогда
			ТекДанные.Статья = ВыборкаРаспознавашек.Статья;
		КонецЕсли;
		Если ЕстьПравило Тогда
			ПараметрыПрименения.Вставить("КомментарийНеЗаполнен", КомментарийНеЗаполнен);
			ПараметрыПрименения.Вставить("КорКошелёкНеЗаполнен", КорКошелёкНеЗаполнен);
			ПараметрыПрименения.Вставить("СтатьяНеЗаполнена", СтатьяНеЗаполнена);
			ВОЛНА_ОбщегоНазначения_КлиентСервер.ВыполнитьКод(ВыборкаРаспознавашек.ПравилоРаспознавания, ПараметрыПрименения, Ложь);
		КонецЕсли;
	КонецЕсли;
	Возврат Результат
КонецФункции

#КонецОбласти
