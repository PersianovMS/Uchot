#Область ПРОГРАММНЫЙ_ИНТЕРФЕЙС
	
#КонецОбласти

#Область СОБЫТИЯ_ФОРМЫ
	
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.Источник = Новый ХранилищеЗначения(СохранённыйИсточник);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьКонцыИПродолжительность();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Объект.С) Тогда
		#Область ТЕКСТ_ЗАПРОСА
			Запрос = Новый Запрос(
					"ВЫБРАТЬ
					|	МАКСИМУМ(РегистрВремя.Период) КАК Период
					|ПОМЕСТИТЬ МаксВремя
					|ИЗ
					|	РегистрНакопления.Время КАК РегистрВремя
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	РегистрВремя.Период КАК ПЕриод,
					|	РегистрВремя.Время КАК Время
					|ИЗ
					|	МаксВремя КАК МаксВремя
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Время КАК РегистрВремя
					|		ПО МаксВремя.Период = РегистрВремя.Период");
		#КонецОбласти 
		ВыбРезультат = Запрос.Выполнить().Выбрать();
		Объект.С = ?(ВыбРезультат.Следующий(), ВыбРезультат.Период + ВыбРезультат.Время * 3600, НачалоМесяца(ТекущаяДатаСеанса()));
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.По_) Тогда
		Объект.По_ = ТекущаяДатаСеанса();
	КонецЕсли;
	ОбновитьКонцыИПродолжительность();
	Настоящий = РеквизитФормыВЗначение("Объект");
	СохранённыйИсточник = Настоящий.Источник.Получить();
	ОбновитьПоследнююОперацию();
КонецПроцедуры

#КонецОбласти

#Область СОБЫТИЯ_ЭЛЕМЕНТОВ
	
&НаКлиенте
Процедура СоставПриИзменении(Элемент)
	ТекДанные = Элемент.ТекущиеДанные;
	ТекКолонка = Элемент.ТекущийЭлемент.Имя;
	Колво = Объект.Состав.Количество();
	#Область СООТНОШЕНИЕ_НАЧАЛО_ПРОДОЛЖИТЕЛЬНОСТЬ_КОНЕЦ
		Если ТекДанные <> Неопределено Тогда
			СкоррелироватьПродолжительности(ТекДанные, ТекКолонка = "СоставПродолжительностьВЧасах");
			Если ЗначениеЗаполнено(ТекДанные.Старт) Тогда
				КрутимКонец = ЗначениеЗаполнено(ТекДанные.ПродолжительностьЧасМин) И (ТекКолонка = "СоставПродолжительностьВЧасах" ИЛИ ТекКолонка = "СоставПродолжительностьЧасМин");
				Если КрутимКонец ИЛИ НЕ ЗначениеЗаполнено(ТекДанные.Конец)  Тогда
					ТекДанные.Конец = ?(ТекДанные.НомерСтроки = 1, Объект.По_,
							?(ЗначениеЗаполнено(ТекДанные.ПродолжительностьЧасМин), ТекДанные.Старт + (ТекДанные.ПродолжительностьЧасМин - '00000000'),
							Объект.Состав[ТекДанные.НомерСтроки - 2].Старт));
				КонецЕсли;
				Если НЕ КрутимКонец Тогда
					ТекДанные.ПродолжительностьЧасМин = '00000000' + (ТекДанные.Конец - ТекДанные.Старт);
					ТекДанные.ПродолжительностьВЧасах = (ТекДанные.ПродолжительностьЧасМин - '00000000') / 3600;
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(ТекДанные.Конец) Тогда
				//Финиш заполнен, старт - нет
				Если ЗначениеЗаполнено(ТекДанные.ПродолжительностьЧасМин) Тогда
					ТекДанные.Старт = '00000000' + (ТекДанные.Конец - ТекДанные.ПродолжительностьЧасМин);
				Иначе
					ТекДанные.Старт = ?(ТекДанные.НомерСтроки = Колво, Объект.С, Объект.Состав[ТекДанные.НомерСтроки].Конец);
					ТекДанные.ПродолжительностьЧасМин = '00000000' + (ТекДанные.Конец - ТекДанные.Старт);
					ТекДанные.ПродолжительностьВЧасах = (ТекДанные.ПродолжительностьЧасМин - '00000000')/ 3600;
				КонецЕсли;
			Иначе
				//Не заполнены старт и финиш
				ТекДанные.Старт = ?(ТекДанные.НомерСтроки = Колво, Объект.С, Объект.Состав[ТекДанные.НомерСтроки].Конец);
				Если ЗначениеЗаполнено(ТекДанные.ПродолжительностьЧасМин) Тогда
					ТекДанные.Конец = ТекДанные.Старт + (ТекДанные.ПродолжительностьЧасМин - '00000000');
				Иначе
					ТекДанные.Конец = ?(ТекДанные.НомерСтроки = 1, Объект.По_, Объект.Состав[ТекДанные.НомерСтроки - 2].Старт);
					ТекДанные.ПродолжительностьЧасМин = '00000000' + (ТекДанные.Конец - ТекДанные.Старт);
					ТекДанные.ПродолжительностьВЧасах = (ТекДанные.ПродолжительностьЧасМин - '00000000')/ 3600;
				КонецЕсли;
			КонецЕсли;
			#Область СОСЕДНИЕ_СТРОКИ
				Если ТекДанные.НомерСтроки < Колво Тогда
					КорСтрока = Объект.Состав[ТекДанные.НомерСтроки];
					Если КорСтрока.Конец <> ТекДанные.Старт Тогда
						КорСтрока.Конец = ТекДанные.Старт;
						КорСтрока.ПродолжительностьЧасМин = '00000000' + (КорСтрока.Конец - КорСтрока.Старт);
						КорСтрока.ПродолжительностьВЧасах = (КорСтрока.ПродолжительностьЧасМин - '00000000')/ 3600;
					КонецЕсли;
				КонецЕсли;
				Если ТекДанные.НомерСтроки > 1 Тогда
					КорСтрока = Объект.Состав[ТекДанные.НомерСтроки - 2];
					Если КорСтрока.Старт <> ТекДанные.Конец Тогда
						КорСтрока.Старт = ТекДанные.Конец;
						КорСтрока.ПродолжительностьЧасМин = '00000000' + (КорСтрока.Конец - КорСтрока.Старт);
						КорСтрока.ПродолжительностьВЧасах = (КорСтрока.ПродолжительностьЧасМин -'00000000') / 3600;
					КонецЕсли;
				КонецЕсли;
			#КонецОбласти
			#Область ШАПКА
				МинД = '39991231';
				МаксД = '00000000';
				Для каждого Строчечка Из Объект.Состав Цикл
					МинД = Мин(МинД, Строчечка.Старт);
					МаксД = Макс(МаксД, Строчечка.Конец);
				КонецЦикла;
				Объект.С = МинД;
				Объект.По_ = МаксД;
			#КонецОбласти
		КонецЕсли;
	#КонецОбласти
КонецПроцедуры

&НаКлиенте
Процедура СПриИзменении(Элемент)
	ОбновитьПоследнююОперацию();
КонецПроцедуры

#КонецОбласти

#Область КОМАНДЫ
	
&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьИзТДНаСервере();
	Элементы.СоставИЗаполнение.ТекущаяСтраница = Элементы.СтраницаСостав;
	Исправить_Концы();
КонецПроцедуры

&НаКлиенте
Процедура ИсправитьКонцы(Команда)
	Исправить_Концы();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТДИзХранилища(Команда)
	ОткрытьТД_();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьШаблонТД(Команда)
	ОткрытьШаблонНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РазбитьСтроку(Команда)
	ТекДанные = Элементы.Состав.ТекущиеДанные;
	//Начинаю искать цифры. Первый минус и восклы пропускаю. Минус и диез раделители. Число тоже разделитель.
	//"Мин" "минут" " минут" "минуты" "минута" " минуты" " минута" "ч" " мин" " ч" " час" "час" "часов" и " часов"
	//после числа входят в состав числа. "Час" без числа = 1 час.
	//Если до и после числа пробелы, =, -, +, (!, ;, . - только после; а после слов часов и минут - любая небуква) - то это число, иначе считается как буквы.
	//Строка в кавычках - всегда текстовый комментарий.
	//Если до числа есть текст - число относится к нему. Если нет - к тексту после числа. "поост" - особое число. Примеры чисел: 20; -  20 ч   40мин ; Числа без единиц - минуты
	//Если чисел не найдено - делится пополам с той же аналитикой.
	//Угадать статьи распознавашкой
	Если ТекДанные <> Неопределено Тогда
		мРазбитыйКомментарий = Новый Массив;
		Цифры = "1234567890";
		Буквы = "АБВГДЕЁЖЗИКЛМНОПРСТУФХЦЧШЩЬЫЪЭЮЯабвгдеёжзиклмнопрстуфхцчшщьыъэюя";
		ПослеЧисла = " =+-!;.";
		#Область КОММЕНТАРИЙ_В_МАССИВ_РАСПОЗНАВАНИЕ
			ТекКомментарий = СокрЛП(ТекДанные.Комментарий);
			СтартовыйКоммент = "";
			Для каждого ПодстрокаКомментария Из
					СтрРазделить(
						СтрЗаменить(
							?(Лев(ТекКомментарий, 1) = "!",
								Сред(ТекКомментарий, 2),
								ТекКомментарий),
							"#",
							"-"),
						"-",
						Ложь) Цикл
				ОстатокПодстроки = СокрЛП(ПодстрокаКомментария);
				ДлинаПодстроки = СтрДлина(ОстатокПодстроки);
				ПозЧисла = 0;
				#Область РАСПОЗНАВАНИЕ
					Пока ДлинаПодстроки > 0 Цикл
						КомментПодстроки = СтартовыйКоммент;
						СтартовыйКоммент = "";
						МинутПодстроки = 0;
						ЧислоСтрокой = "";
						ЭтоЧисло = Ложь;
						ПослеПробелаЗнакаРавенстваИлиЦифры = Истина;
						ВКавычках = Ложь;
						Для ЁХХ = 1 По ДлинаПодстроки Цикл
							ТекСимвол = Сред(ОстатокПодстроки, ЁХХ, 1);
							Если ВКавычках Тогда
								Если ТекСимвол = """" Тогда
									ВКавычках = Ложь;
								КонецЕсли;
								ЭтоБуква = Истина;
							ИначеЕсли ПослеПробелаЗнакаРавенстваИлиЦифры И СтрНайти(Цифры, ТекСимвол) > 0 Тогда
								Если ЭтоЧисло ИЛИ МинутПодстроки = 0 Тогда
									ЭтоЧисло = Истина;
									ПозЧисла = ?(ПозЧисла = 0, ЁХХ, ПозЧисла);
									ЧислоСтрокой = ЧислоСтрокой + ТекСимвол;
									ЭтоБуква = Ложь;
								Иначе
									Прервать;
								КонецЕсли;
							Иначе
								Если ТекСимвол = "п" Тогда
									Если НРег(Сред(ОстатокПодстроки, ЁХХ, 5)) = "поост" Тогда
										Если МинутПодстроки = 0 Тогда
											МинутПодстроки = "ПООСТ";
											Если ЗначениеЗаполнено(КомментПодстроки) Тогда
												ЁХХ = ЁХХ + 5;
												Прервать;
											Иначе
												ЁХХ = ЁХХ + 4;
												ЭтоБуква = Ложь;
												ЭтоЧисло = Ложь;
												ПозЧисла = 0;
											КонецЕсли;
										Иначе
											Прервать;
										КонецЕсли;
									Иначе
										ЭтоБуква = Истина;
									КонецЕсли;
								ИначеЕсли ТекСимвол = " " ИЛИ ТекСимвол = "ч" ИЛИ ТекСимвол = "м" Тогда
									#Область АНАЛИЗ_ЧАСОВ_МИНУТ
										ТриБуквы = НРег(Сред(ОстатокПодстроки, ЁХХ, 3));
										ЧетыреБуквы = Сред(ОстатокПодстроки, ЁХХ, 4);
										ЧетвёртаяБуква = Сред(ОстатокПодстроки, ЁХХ + 3, 1);
										ПятаяБуква = Сред(ОстатокПодстроки, ЁХХ + 4, 1);
										ЭтоЧас = ТриБуквы = "час"  И (ЧетвёртаяБуква = "" ИЛИ СтрНайти(Буквы, ЧетвёртаяБуква) = 0);
										ЭтоПробелЧас = ЧетыреБуквы = " час"  И (ПятаяБуква = "" ИЛИ СтрНайти(Буквы, ПятаяБуква) = 0);
										Если ЭтоЧисло ИЛИ ЭтоЧас И ЁХХ = 1 ИЛИ ЭтоПробелЧас Тогда
											Это_Часы = Истина;
											Если ЭтоЧисло Тогда
												//Нужны только для числа
												ДвеБуквы = Сред(ОстатокПодстроки, ЁХХ, 2);
												ПятьБукв = Сред(ОстатокПодстроки, ЁХХ, 5);
												ШестьБукв = Сред(ОстатокПодстроки, ЁХХ, 6);
												СемьБукв = Сред(ОстатокПодстроки, ЁХХ, 7);
												ВтораяБуква = Сред(ОстатокПодстроки, ЁХХ + 1, 1);
												ТретьяБуква = Сред(ОстатокПодстроки, ЁХХ + 2, 1);
												ШестаяБуква = Сред(ОстатокПодстроки, ЁХХ + 5, 1);
												СедьмаяБуква = Сред(ОстатокПодстроки, ЁХХ + 6, 1);
												ВосьмаяБуква = Сред(ОстатокПодстроки, ЁХХ + 7, 1);
												Это_Часы = ТекСимвол = "ч" И (ВтораяБуква = "" ИЛИ СтрНайти(Буквы, ВтораяБуква) = 0)
														ИЛИ ДвеБуквы = " ч" И (ТретьяБуква = "" ИЛИ СтрНайти(Буквы, ТретьяБуква) = 0)
														ИЛИ ТриБуквы = "час" И (ЧетвёртаяБуква = "" ИЛИ СтрНайти(Буквы, ЧетвёртаяБуква) = 0)
														ИЛИ ЧетыреБуквы = "часа" И (ПятаяБуква = "" ИЛИ СтрНайти(Буквы, ПятаяБуква) = 0)
														ИЛИ (ПятьБукв = " часа" ИЛИ ПятьБукв = "часов") И (ШестаяБуква = "" ИЛИ СтрНайти(Буквы, ШестаяБуква) = 0)
														ИЛИ ШестьБукв = " часов"  И (СедьмаяБуква = "" ИЛИ СтрНайти(Буквы, СедьмаяБуква) = 0)
											КонецЕсли;
											Если Это_Часы Тогда
												#Область ЧАСЫ
													ЭтоБуква = Ложь;
													МинутПодстроки = ?(ЭтоЧисло, МинутПодстроки + 60 * Число(ЧислоСтрокой), 60);
													Если ШестьБукв = " часов" Тогда
														Если СедьмаяБуква = " " Тогда
															ЭтоЧисло = Истина; //м.б. минуты
															ЁХХ = ЁХХ + 6;
														Иначе
															ЭтоЧисло = Ложь;
															ЁХХ = ЁХХ + 5;
														КонецЕсли;
													ИначеЕсли ПятьБукв = " часа" ИЛИ ПятьБукв = "часов" Тогда
														Если ШестаяБуква = " " Тогда
															ЭтоЧисло = Истина; //м.б. минуты
															ЁХХ = ЁХХ + 5;
														Иначе
															ЭтоЧисло = Ложь;
															ЁХХ = ЁХХ + 4;
														КонецЕсли;
													ИначеЕсли ЧетыреБуквы = "часа" ИЛИ ЧетыреБуквы = " час" Тогда
														Если ПятаяБуква = " " Тогда
															ЭтоЧисло = Истина; //м.б. минуты
															ЁХХ = ЁХХ + 4;
														Иначе
															ЭтоЧисло = Ложь;
															ЁХХ = ЁХХ + 3;
														КонецЕсли;
													ИначеЕсли ТриБуквы = "час" Тогда
														Если ЧетвёртаяБуква = " " Тогда
															ЭтоЧисло = Истина; //м.б. минуты
															ЁХХ = ЁХХ + 3;
														Иначе
															ЭтоЧисло = Ложь;
															ЁХХ = ЁХХ + 2;
														КонецЕсли;
													ИначеЕсли ДвеБуквы = " ч" Тогда
														Если ТретьяБуква = " " Тогда
															ЭтоЧисло = Истина; //м.б. минуты
															ЁХХ = ЁХХ + 2;
														Иначе
															ЭтоЧисло = Ложь; //м.б. минуты
															ЁХХ = ЁХХ + 1;
														КонецЕсли;
													КонецЕсли;
													ЧислоСтрокой = "";
													ПозЧисла = 0;
												#КонецОбласти
											ИначеЕсли ТриБуквы = "мин" И (ЧетвёртаяБуква = "" ИЛИ СтрНайти(Буквы, ЧетвёртаяБуква) = 0)
													ИЛИ ЧетыреБуквы = " мин" И (ПятаяБуква = "" ИЛИ СтрНайти(Буквы, ПятаяБуква) = 0)
													ИЛИ ПятьБукв = "минут" И (ШестаяБуква = "" ИЛИ СтрНайти(Буквы, ШестаяБуква) = 0)
													ИЛИ ((ШестьБукв = " минут") ИЛИ (ШестьБукв = "минута") ИЛИ (ШестьБукв = "минуты"))
														И (СедьмаяБуква = "" ИЛИ СтрНайти(Буквы, СедьмаяБуква) = 0)
													ИЛИ ((СемьБукв = " минута") ИЛИ (СемьБукв = " минуты"))
														И (ВосьмаяБуква = "" ИЛИ СтрНайти(Буквы, ВосьмаяБуква) = 0)
													Тогда
												#Область МИНУТЫ
													ЭтоБуква = Ложь;
													ЭтоЧисло = Ложь;
													ПозЧисла = 0;
													МинутПодстроки = МинутПодстроки + Число(ЧислоСтрокой);
													ЧислоСтрокой = "";
													Если ТриБуквы = "мин" Тогда
														ЁХХ = ЁХХ + 2;
													ИначеЕсли ЧетыреБуквы = " мин" Тогда
														ЁХХ = ЁХХ + 3;
													ИначеЕсли ПятьБукв = "минут" Тогда
														ЁХХ = ЁХХ + 4;
													ИначеЕсли (ШестьБукв = " минут") ИЛИ (ШестьБукв = "минута") ИЛИ (ШестьБукв = "минуты") Тогда
														ЁХХ = ЁХХ + 5;
													ИначеЕсли (СемьБукв = " минута") ИЛИ (СемьБукв = " минуты") Тогда
														ЁХХ = ЁХХ + 6;
													КонецЕсли;
													Если ЗначениеЗаполнено(КомментПодстроки) Тогда
														Прервать;
													КонецЕсли;
												#КонецОбласти
											Иначе
												ЭтоБуква = Истина;
											КонецЕсли;
										Иначе
											ЭтоБуква = Истина;
										КонецЕсли;
									#КонецОбласти
								Иначе
									ЭтоБуква = Истина;
								КонецЕсли;
							КонецЕсли;
							Если ЭтоБуква Тогда
								Если ЭтоЧисло Тогда
									Если СтрНайти(ПослеЧисла, ТекСимвол) > 0  Тогда
										МинутПодстроки = МинутПодстроки + Число(ЧислоСтрокой);
										Если ЗначениеЗаполнено(КомментПодстроки) Тогда
											Прервать;
										Иначе
											КомментПодстроки = КомментПодстроки + ТекСимвол;
											ЭтоЧисло = Ложь;
										КонецЕсли;
									ИначеЕсли МинутПодстроки > 0 Тогда
										СтартовыйКоммент = Сред(ОстатокПодстроки, ПозЧисла, ЁХХ - ПозЧисла + 1);
										ЭтоЧисло = Ложь;
										Прервать;
									Иначе
										КомментПодстроки = КомментПодстроки + Сред(ОстатокПодстроки, ПозЧисла, ЁХХ - ПозЧисла + 1);
										ЭтоЧисло = Ложь;
									КонецЕсли;
								Иначе
									КомментПодстроки = КомментПодстроки + ТекСимвол;
								КонецЕсли;
								ПозЧисла = 0;
							КонецЕсли;
							ПослеПробелаЗнакаРавенстваИлиЦифры = НЕ ВКавычках И (ТекСимвол = " " ИЛИ ТекСимвол = "=" ИЛИ ТекСимвол = "-" ИЛИ ТекСимвол = "+" ИЛИ ЭтоЧисло);
						КонецЦикла;
						КомментПодстроки = СокрЛП(КомментПодстроки);
						ПервыйСимволКоммента = Лев(КомментПодстроки, 1);
						#Область УДАЛЕНИЕ_ПРЕФИКСОВ
							Пока ПервыйСимволКоммента = "!" ИЛИ ПервыйСимволКоммента = "+" ИЛИ ПервыйСимволКоммента = " " ИЛИ ПервыйСимволКоммента = "-" Цикл
								КомментПодстроки = Сред(КомментПодстроки, 2);
								ПервыйСимволКоммента = Лев(КомментПодстроки, 1);
							КонецЦикла;
						#КонецОбласти
						#Область РАЗМЕЩЕНИЕ_В_МАССИВ
							МинутВМассив = ?(МинутПодстроки = 0, ?(ЗначениеЗаполнено(ЧислоСтрокой), Число(ЧислоСтрокой), 0), МинутПодстроки);
							ВГраница = мРазбитыйКомментарий.ВГраница();
							Если МинутПодстроки = 0 И ЧислоСтрокой = "" И ВГраница >= 0 Тогда
								ТекСтркт = мРазбитыйКомментарий[ВГраница];
								ТекСтркт.Комментарий = ТекСтркт.Комментарий + "|" + СокрЛП(КомментПодстроки);
							Иначе
								мРазбитыйКомментарий.Добавить(Новый Структура("Комментарий,Минут", СокрЛП(КомментПодстроки), МинутВМассив));
							КонецЕсли;
						#КонецОбласти
						ОстатокПодстроки = Сред(ОстатокПодстроки, ЁХХ);
						ДлинаПодстроки = СтрДлина(ОстатокПодстроки);
					КонецЦикла;
				#КонецОбласти
			КонецЦикла;
		#КонецОбласти
		ОстатокСекунд = ТекДанные.ПродолжительностьЧасМин - '00000000';
		ЕстьПоОст = 0;
		Старт = ТекДанные.Старт;
		ТекКоммент = ТекДанные.Комментарий;
		НомерСтроки = ТекДанные.НомерСтроки;
		Распознавашки = МассивРаспознавашек();
		ТекСтатья = ТекДанные.Статья;
		Добавлено = Ложь;
		Для каждого СтрМинКомм Из мРазбитыйКомментарий Цикл
			Если ВРег(СтрМинКомм.Минут) = "ПООСТ" Тогда
				ЕстьПоОст = ЕстьПоОст + 1;
			ИначеЕсли СтрМинКомм.Минут > 0  Тогда
				НоваяСтрока = Объект.Состав.Вставить(НомерСтроки);
				НоваяСтрока.Старт = Старт;
				НоваяСтрока.ПродолжительностьЧасМин = '00000000' + СтрМинКомм.Минут * 60;
				НоваяСтрока.ПродолжительностьВЧасах = СтрМинКомм.Минут / 60;
				НоваяСтрока.Конец = Старт + (НоваяСтрока.ПродолжительностьЧасМин - '00000000');
				НоваяСтрока.Комментарий = СтрМинКомм.Комментарий;
				РаспознавашкиКлиентСервер.РаспознатьВСтроке(НоваяСтрока, Распознавашки,, ТекСтатья);
				ОстатокСекунд = ОстатокСекунд - (НоваяСтрока.ПродолжительностьЧасМин - '00000000');
				Старт = НоваяСтрока.Конец;
				Добавлено = Истина;
			КонецЕсли;
		КонецЦикла;
		ВремяПоОст = Цел(ОстатокСекунд / ?(ЕстьПоОст = 0, 1, ЕстьПоОст));
		Если ВремяПоОст > 0 Тогда
			Если ЕстьПоОст = 0 Тогда
				НоваяСтрока = Объект.Состав.Вставить(НомерСтроки);
				НоваяСтрока.Старт = Старт;
				НоваяСтрока.ПродолжительностьЧасМин = '00000000' + ВремяПоОст;
				НоваяСтрока.ПродолжительностьВЧасах = ВремяПоОст / 3600;
				НоваяСтрока.Конец = Старт + (НоваяСтрока.ПродолжительностьЧасМин - '00000000');
				НоваяСтрока.Комментарий = ТекКоммент;
				НоваяСтрока.Статья = ТекСтатья;
				ОстатокСекунд = ОстатокСекунд - (НоваяСтрока.ПродолжительностьЧасМин - '00000000');
				Добавлено = Истина;
			Иначе
				Для каждого СтрМинКомм Из мРазбитыйКомментарий Цикл
					Если ВРег(СтрМинКомм.Минут) = "ПООСТ" Тогда
						НоваяСтрока = Объект.Состав.Вставить(НомерСтроки);
						НоваяСтрока.Старт = Старт;
						НоваяСтрока.ПродолжительностьЧасМин = '00000000' + ВремяПоОст;
						НоваяСтрока.ПродолжительностьВЧасах = ВремяПоОст / 3600;
						НоваяСтрока.Конец = Старт + (НоваяСтрока.ПродолжительностьЧасМин - '00000000');
						НоваяСтрока.Комментарий = СтрМинКомм.Комментарий;
						РаспознавашкиКлиентСервер.РаспознатьВСтроке(НоваяСтрока, Распознавашки,, ТекСтатья);
						ОстатокСекунд = ОстатокСекунд - (НоваяСтрока.ПродолжительностьЧасМин - '00000000');
						Старт = НоваяСтрока.Конец;
						Добавлено = Истина;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		Если ОстатокСекунд > 0 Тогда
			КорСтрока = Объект.Состав[НомерСтроки];
			КорСтрока.Конец = КорСтрока.Конец + ОстатокСекунд;
			КорСтрока.ПродолжительностьЧасМин = КорСтрока.ПродолжительностьЧасМин + ОстатокСекунд;
			КорСтрока.ПродолжительностьВЧасах = (КорСтрока.ПродолжительностьЧасМин - '00000000') / 3600;
		КонецЕсли;
		Если Добавлено И Ложь Тогда //Не надо удалять - проверять буду
			Объект.Состав.Удалить(НомерСтроки - 1);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Распознать(Команда)
	ТекДанные = Элементы.Состав.ТекущиеДанные;
	РаспознавашкиКлиентСервер.РаспознатьВСтроке(ТекДанные,,, ТекДанные.Статья,, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СброситьКомментарии(Команда)
	Для каждого ИДС Из Элементы.Состав.ВыделенныеСтроки Цикл
		Объект.Состав.НайтиПоИдентификатору(ИДС).Комментарий = "";
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТекущееЗначениеВВыделенныеСтроки(Команда)
	ТекДанные = Элементы.Состав.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		мСтроки = Элементы.Состав.ВыделенныеСтроки;
		ТекКолонка = Элементы.Состав.ТекущийЭлемент.Имя;
		ИмяКолонки = ИмяДанных(ТекКолонка);
		ТекЗначение = ТекДанные[ИмяКолонки];
		Для каждого ИД Из мСтроки Цикл
			Объект.Состав.НайтиПоИдентификатору(ИД)[ИмяКолонки] = ТекЗначение;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СЛУЖЕБНЫЕ

// Выполняет заполнение по тогловскому макету
&НаСервере
Процедура ЗаполнитьИзТДНаСервере()
	#Область ЧИТАТЬ_В_ТЗ
		Таб_Значений = ВОЛНА_ОбщегоНазначения_КлиентСервер.ЗагрузитьТаблицуЗначенийИзТабличногоДокумента(ИсточникЗаполнения,, 3, 4);
	#КонецОбласти
	ЕстьСтроки = Объект.Состав.Количество() > 0;
	МинВремя = ?(ЕстьСтроки, Объект.С, '39991231');
	МаксВремя = ?(ЕстьСтроки, Объект.По_, '00000000');
	СооСтатей = Новый Соответствие;
	РазделительИмени = "|";
	ВыбРа = Неопределено;
	ПустаяСтатья = Справочники.СтатьиДДС.ПустаяСсылка();
	ТипСтрока = Тип("Строка");
	Для каждого Строчка Из Таб_Значений Цикл
		#Область РАСПОЗНАВАНИЕ_СТАТЕЙ_ПО_ПУТИ
			ИД = "" + Строчка.Статья1 + РазделительИмени + Строчка.Статья2;
			ТекСтатья = СооСтатей[ИД];
			Если ТекСтатья = Неопределено Тогда
				ТекСтатья = ?(ТипЗнч(Строчка.Статья1) = Тип("Строка"),
						Справочники.СтатьиДДС.НайтиПоНаименованию(Строчка.Статья1, Истина, ПустаяСтатья),
						Строчка.Статья1);
				Если ТекСтатья <> ПустаяСтатья Тогда
					Для каждого ИмяСтатьи Из СтрРазделить(Строчка.Статья2, "|", Ложь) Цикл
						Статья2 = Справочники.СтатьиДДС.НайтиПоНаименованию(ИмяСтатьи, Истина, ТекСтатья);
						Если Статья2 = ПустаяСтатья Тогда
							Прервать;
						Иначе
							ТекСтатья = Статья2;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				СооСтатей.Вставить(ИД, ТекСтатья);
			КонецЕсли;
		#КонецОбласти
		#Область ЗАПОЛНЕНИЕ_СТРОК
			НоваяСтрока = Объект.Состав.Вставить(0);
			НоваяСтрока.Старт = Строчка.СтартДата + (Строчка.СтартВремя - '00000000');
			НоваяСтрока.ПродолжительностьЧасМин = Строчка.Длительность;
			НоваяСтрока.Конец  = НоваяСтрока.Старт + (Строчка.Длительность - '00000000');
			//НоваяСтрока.Конец = Строчка.КонецДата + (Строчка.КонецВремя - '00000000');
			//НоваяСтрока.ПродолжительностьЧасМин = '00000000' + (НоваяСтрока.Конец - НоваяСтрока.Старт);
			НоваяСтрока.ПродолжительностьВЧасах = (НоваяСтрока.ПродолжительностьЧасМин - '00000000') / 3600;
			НоваяСтрока.Статья = ТекСтатья;
			НоваяСтрока.Комментарий = Строчка.Комментарий;
			Если НоваяСтрока.Статья = ПустаяСтатья Тогда
				РаспознавашкиКлиентСервер.РаспознатьВСтроке(НоваяСтрока, ВыбРа);
			КонецЕсли;
			МинВремя = Мин(МинВремя, НоваяСтрока.Старт);
			МаксВремя = Макс(МаксВремя, НоваяСтрока.Конец);
		#КонецОбласти
	КонецЦикла;
	#Область ОБНОВЛЕНИЕ_ШАПКИ
		Объект.С = МинВремя;
		Объект.По_ = МаксВремя;
	#КонецОбласти
	#Область СОХРАНЕНИЕ_МАКЕТА
		СохранённыйИсточник = ИсточникЗаполнения;
	#КонецОбласти
КонецПроцедуры // ЗаполнитьИзТДНаСервере

// Возвращает имя колонки данных
// Параметры:
//  Элемент  - Строка - Имя элемента колонки
// Возвращаемое значение:
//   Строка   - Конец пути к данным элемента
&НаСервере
Функция ИмяДанных(Элемент)
	Путь = Элементы[Элемент].ПутьКДанным;
	ПозСлэша = СтрНайти(Путь, ".", НаправлениеПоиска.СКонца);
	Возврат ?(ПозСлэша = 0, Путь, Сред(Путь, ПозСлэша + 1))
КонецФункции // ИмяДанных

//Исправляет конецчное время по началу следующих записей по всей ТЧ
&НаКлиенте
Процедура Исправить_Концы()
	Для ЁХХ = 1 По Объект.Состав.Количество() - 1 Цикл
		Изменяемая = Объект.Состав[ЁХХ];
		Изменяемая.Конец = Объект.Состав[ЁХХ - 1].Старт;
		Изменяемая.ПродолжительностьЧасМин = '00000000' + (Изменяемая.Конец - Изменяемая.Старт);
		Изменяемая.ПродолжительностьВЧасах = (Изменяемая.Конец - Изменяемая.Старт) / 3600;
	КонецЦикла;
КонецПроцедуры

// Возвращает массив для применения правил распознавания
&НаСервере
Функция МассивРаспознавашек()
	Справочники.Распознавания.ВсеРаспознавания(Истина);
КонецФункции // МассивРаспознавашек

Процедура ОбновитьКонцыИПродолжительность();
	Для каждого СтрокаТЧ Из Объект.Состав Цикл
		ПродолжительностьВСекундах = СтрокаТЧ.ПродолжительностьВЧасах * 3600;
		СтрокаТЧ.ПродолжительностьЧасМин = '00000000' + ПродолжительностьВСекундах;
		СтрокаТЧ.Конец = СтрокаТЧ.Старт + ПродолжительностьВСекундах;
	КонецЦикла;
КонецПроцедуры

// Обновляет надпись о последней операции
&НаСервере
Процедура ОбновитьПоследнююОперацию()
	ПараметрДата = ?(ЗначениеЗаполнено(Объект.С), Объект.С, Объект.Дата);
	#Область ТЕКСТ_ЗАПРОСА
		Запрос = Новый Запрос(
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	РегВремя.Период КАК Период,
				|	РегВремя.Регистратор КАК Регистратор,
				|	РегВремя.Статья КАК Статья,
				|	РегВремя.Комментарий КАК Комментарий
				|ИЗ
				|	РегистрНакопления.Время КАК РегВремя
				|ГДЕ
				|	РегВремя.Период < &ПараметрДата
				|
				|УПОРЯДОЧИТЬ ПО
				|	РегВремя.Период УБЫВ");
	#КонецОбласти 
	Запрос.УстановитьПараметр("ПараметрДата", ПараметрДата);
	ВыбРезультат = Запрос.Выполнить().Выбрать();
	Элементы.НадписьПоследняяОперация.Заголовок =
			?(ВыбРезультат.Следующий(),
				"Прошлая операция от " + ВыбРезультат.Период + " (" + ВыбРезультат.Комментарий + "," + ВыбРезультат.Статья + "), сделана " + ВыбРезультат.Регистратор,
				"Предыдущая операция кошелька не обнаружена");
КонецПроцедуры // ОбновитьПоследнююОперацию

&НаСервере
Процедура ОткрытьТД_()
	ИсточникЗаполнения = СохранённыйИсточник;
КонецПроцедуры

&НаСервере
Процедура ОткрытьШаблонНаСервере()
	НовыйМакет = Документы.ВводВремени.ПолучитьМакет("Тогл");
	ИсточникЗаполнения = НовыйМакет;
КонецПроцедуры

// Выравнивает значения продолжительностей в строке
// Параметры:
//  ДанныеСтроки  - Строка ТЧ Состав - Источник и приёмник данных
//  ПриоритетУЧисла  - Булево - Верным считается число
&НаКлиенте
Процедура СкоррелироватьПродолжительности(ДанныеСтроки, ПриоритетУЧисла = Ложь)
	Если ПриоритетУЧисла Тогда
		ДанныеСтроки.ПродолжительностьЧасМин = '00000000' + ДанныеСтроки.ПродолжительностьВЧасах * 3600;
	Иначе
		ДанныеСтроки.ПродолжительностьВЧасах = (ДанныеСтроки.ПродолжительностьЧасМин - '00000000') / 3600;
	КонецЕсли;
КонецПроцедуры // СкоррелироватьПродолжительности

#КонецОбласти

